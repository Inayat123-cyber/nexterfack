#!/bin/bash

# NextGenDork - Advanced Dork Recon Toolkit
# Author: Inayat Hussain (Security Researcher)
# Description: Multi-engine dorking with GitHub, Shodan, crt.sh, Google Hacking DB queries, and HTML report generation.

# === Configuration ===
RESET="\033[0m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
CYAN="\033[1;36m"
RED="\033[1;31m"
OUTDIR="reconic_results"
OUTFILE="$OUTDIR/dork_report_$(date +%Y%m%d_%H%M%S).html"
mkdir -p "$OUTDIR"

# === Banner ===
echo -e "${RED}"
cat << "EOF"
 _   _           _              _____             _    
| \ | | _____  _| |_ ___ _ __  |  ___|_ _  ___ ___| | __
|  \| |/ _ \ \/ / __/ _ \ '__| | |_ / _` |/ __/ _ \ |/ /
| |\  |  __/>  <| ||  __/ |    |  _| (_| | (_|  __/   < 
|_| \_|\___/_/\_\\__\___|_|    |_|  \__,_|\___\___|_|\_\

             NextGenDork by Inayat Hussain
EOF
echo -e "${RESET}"

# === Prompt for Domain ===
echo -e "${CYAN}Enter target domain (e.g., example.com):${RESET}"
read -r DOMAIN

# === Prompt for Options ===
echo -e "\nDo you want to export results to an HTML file? [Y/n]"
read -r EXPORT

echo -e "\nDo you want to open dork links in browser? [Y/n]"
read -r OPEN_BROWSER

# === HTML Template Start ===
if [[ "$EXPORT" =~ ^[Yy]$ ]]; then
  echo "<html><head><title>NextGenDork Report for $DOMAIN</title></head><body><h1>NextGenDork Report for $DOMAIN</h1><pre>" > "$OUTFILE"
fi

# === Function: Dork Formatter ===
print_dork() {
  local TYPE=$1
  local DORK=$2
  local LINK=$3
  echo -e "${YELLOW}[$TYPE]${RESET} ${GREEN}Dork:${RESET} $DORK"
  echo -e "${CYAN}Link:${RESET} $LINK\n"
  if [[ "$EXPORT" =~ ^[Yy]$ ]]; then
    echo -e "<b>[$TYPE]</b> Dork: $DORK<br>Link: <a href=\"$LINK\">$LINK</a><br><br>" >> "$OUTFILE"
  fi
  if [[ "$OPEN_BROWSER" =~ ^[Yy]$ ]]; then
    xdg-open "$LINK" >/dev/null 2>&1 &
  fi
}

# === Google Dorks (Extended from GHDB) ===
generate_google_dorks() {
  echo -e "\n${GREEN}[*] Google Dorks (GHDB Inspired)${RESET}"
  local G_DORKS=(
    "site:$DOMAIN"
    "site:$DOMAIN inurl:admin"
    "site:$DOMAIN inurl:login"
    "site:$DOMAIN ext:env"
    "site:$DOMAIN filetype:sql"
    "site:$DOMAIN intext:'index of /backup'"
    "site:$DOMAIN password"
    "site:$DOMAIN confidential"
    "site:$DOMAIN ext:log"
    "site:$DOMAIN ext:bak"
    "site:$DOMAIN ext:old"
    "site:$DOMAIN filetype:xml"
    "site:$DOMAIN filetype:json"
    "site:$DOMAIN ext:conf"
    "site:$DOMAIN inurl:wp-content"
    "site:$DOMAIN inurl:.git"
    "site:$DOMAIN inurl:.env"
    "site:$DOMAIN intitle:'index of'"
    "site:$DOMAIN inurl:phpinfo"
    "site:$DOMAIN 'DB_PASSWORD'"
    "site:$DOMAIN 'AWS_SECRET_ACCESS_KEY'"
    "site:$DOMAIN ext:xls OR ext:csv OR ext:doc intext:@$DOMAIN"
    "site:$DOMAIN filetype:pdf intext:confidential"
  )
  for DORK in "${G_DORKS[@]}"; do
    LINK="https://www.google.com/search?q=$(echo "$DORK" | sed 's/ /+/g')"
    print_dork "Google" "$DORK" "$LINK"
  done
}

# === GitHub Dorks ===
generate_github_dorks() {
  echo -e "\n${GREEN}[*] GitHub Dorks${RESET}"
  local GH_DORKS=(
    "filename:.env $DOMAIN"
    "$DOMAIN password"
    "$DOMAIN api_key"
    "$DOMAIN AWS_SECRET_ACCESS_KEY"
    "$DOMAIN filename:config"
    "$DOMAIN extension:json"
  )
  for DORK in "${GH_DORKS[@]}"; do
    LINK="https://github.com/search?q=$(echo "$DORK" | sed 's/ /+/g')"
    print_dork "GitHub" "$DORK" "$LINK"
  done
}

# === Shodan Dorks ===
generate_shodan_dorks() {
  echo -e "\n${GREEN}[*] Shodan Dorks${RESET}"
  local SHODAN_DORKS=(
    "hostname:$DOMAIN"
    "ssl:$DOMAIN"
    "http.title:$DOMAIN"
    "org:$DOMAIN"
    "product:Apache hostname:$DOMAIN"
    "product:Nginx hostname:$DOMAIN"
  )
  for DORK in "${SHODAN_DORKS[@]}"; do
    LINK="https://www.shodan.io/search?query=$(echo "$DORK" | sed 's/ /+/g')"
    print_dork "Shodan" "$DORK" "$LINK"
  done
}

# === crt.sh Subdomain Search ===
search_crtsh() {
  echo -e "\n${GREEN}[*] Subdomains via crt.sh${RESET}"
  curl -s "https://crt.sh/?q=%25.$DOMAIN&output=json" | jq -r '.[].name_value' | sort -u | tee "$OUTDIR/crtsh_subdomains.txt"
  echo -e "${CYAN}[+] Saved to: $OUTDIR/crtsh_subdomains.txt${RESET}"
}

# === Main ===
generate_google_dorks
generate_github_dorks
generate_shodan_dorks
search_crtsh

# === HTML Close ===
if [[ "$EXPORT" =~ ^[Yy]$ ]]; then
  echo "</pre></body></html>" >> "$OUTFILE"
  echo -e "\n${GREEN}[+] Report saved to: $OUTFILE${RESET}"
fi

exit 0

